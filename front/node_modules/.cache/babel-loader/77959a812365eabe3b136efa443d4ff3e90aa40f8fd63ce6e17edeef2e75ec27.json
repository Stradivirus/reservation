{"ast":null,"code":"var _jsxFileName = \"/home/work/reservation/front/src/ImageSlider.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './ImageSlider.css'; // CSS 파일 임포트 추가\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst images = [`${process.env.PUBLIC_URL}/images/1731806820349.jpg`, `${process.env.PUBLIC_URL}/images/1731806825200.jpg`, `${process.env.PUBLIC_URL}/images/1731807191481.jpg`, `${process.env.PUBLIC_URL}/images/1731807231234.jpg`];\nfunction ImageSlider() {\n  _s();\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\n  const [imagesLoaded, setImagesLoaded] = useState(false);\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setCurrentImageIndex(prevIndex => prevIndex === images.length - 1 ? 0 : prevIndex + 1);\n    }, 5000);\n    return () => clearInterval(timer);\n  }, []);\n  const handleImageLoad = () => {\n    setImagesLoaded(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"image-slider-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-slider\",\n      children: images.map((image, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: image,\n        alt: `슬라이드 ${index + 1}`,\n        className: `slider-image ${index === currentImageIndex ? 'active' : ''}`,\n        onLoad: handleImageLoad\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), !imagesLoaded && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(ImageSlider, \"UuCY23WiC3HQI0K+aYbkFDmUeVo=\");\n_c = ImageSlider;\nexport default ImageSlider;\nvar _c;\n$RefreshReg$(_c, \"ImageSlider\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","images","process","env","PUBLIC_URL","ImageSlider","_s","currentImageIndex","setCurrentImageIndex","imagesLoaded","setImagesLoaded","timer","setInterval","prevIndex","length","clearInterval","handleImageLoad","className","children","map","image","index","src","alt","onLoad","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/work/reservation/front/src/ImageSlider.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './ImageSlider.css';  // CSS 파일 임포트 추가\n\nconst images = [\n  `${process.env.PUBLIC_URL}/images/1731806820349.jpg`,\n  `${process.env.PUBLIC_URL}/images/1731806825200.jpg`,\n  `${process.env.PUBLIC_URL}/images/1731807191481.jpg`,\n  `${process.env.PUBLIC_URL}/images/1731807231234.jpg`\n];\n\nfunction ImageSlider() {\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\n  const [imagesLoaded, setImagesLoaded] = useState(false);\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setCurrentImageIndex((prevIndex) => \n        prevIndex === images.length - 1 ? 0 : prevIndex + 1\n      );\n    }, 5000);\n\n    return () => clearInterval(timer);\n  }, []);\n\n  const handleImageLoad = () => {\n    setImagesLoaded(true);\n  };\n\n  return (\n    <div className=\"image-slider-wrapper\">\n      <div className=\"image-slider\">\n        {images.map((image, index) => (\n          <img\n            key={index}\n            src={image}\n            alt={`슬라이드 ${index + 1}`}\n            className={`slider-image ${index === currentImageIndex ? 'active' : ''}`}\n            onLoad={handleImageLoad}\n          />\n        ))}\n      </div>\n      {!imagesLoaded && <div className=\"loading\">Loading...</div>}\n    </div>\n  );\n}\n\nexport default ImageSlider;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,mBAAmB,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,MAAM,GAAG,CACb,GAAGC,OAAO,CAACC,GAAG,CAACC,UAAU,2BAA2B,EACpD,GAAGF,OAAO,CAACC,GAAG,CAACC,UAAU,2BAA2B,EACpD,GAAGF,OAAO,CAACC,GAAG,CAACC,UAAU,2BAA2B,EACpD,GAAGF,OAAO,CAACC,GAAG,CAACC,UAAU,2BAA2B,CACrD;AAED,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EAC7D,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAEvDC,SAAS,CAAC,MAAM;IACd,MAAMa,KAAK,GAAGC,WAAW,CAAC,MAAM;MAC9BJ,oBAAoB,CAAEK,SAAS,IAC7BA,SAAS,KAAKZ,MAAM,CAACa,MAAM,GAAG,CAAC,GAAG,CAAC,GAAGD,SAAS,GAAG,CACpD,CAAC;IACH,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAME,aAAa,CAACJ,KAAK,CAAC;EACnC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,eAAe,GAAGA,CAAA,KAAM;IAC5BN,eAAe,CAAC,IAAI,CAAC;EACvB,CAAC;EAED,oBACEV,OAAA;IAAKiB,SAAS,EAAC,sBAAsB;IAAAC,QAAA,gBACnClB,OAAA;MAAKiB,SAAS,EAAC,cAAc;MAAAC,QAAA,EAC1BjB,MAAM,CAACkB,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACvBrB,OAAA;QAEEsB,GAAG,EAAEF,KAAM;QACXG,GAAG,EAAE,QAAQF,KAAK,GAAG,CAAC,EAAG;QACzBJ,SAAS,EAAE,gBAAgBI,KAAK,KAAKd,iBAAiB,GAAG,QAAQ,GAAG,EAAE,EAAG;QACzEiB,MAAM,EAAER;MAAgB,GAJnBK,KAAK;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKX,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,EACL,CAACnB,YAAY,iBAAIT,OAAA;MAAKiB,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAC;IAAU;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxD,CAAC;AAEV;AAACtB,EAAA,CAlCQD,WAAW;AAAAwB,EAAA,GAAXxB,WAAW;AAoCpB,eAAeA,WAAW;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}