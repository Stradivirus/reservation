{"ast":null,"code":"var _jsxFileName = \"/home/work/reservation/front/src/pages/Main/ImageSlider.js\",\n  _s = $RefreshSig$();\n// ImageSlider.js\nimport React, { useState, useEffect } from 'react'; // React 및 필요한 훅 임포트\n\n// 이미지 배열 정의\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst images = [`${process.env.PUBLIC_URL}/images/1731806820349.jpg`, `${process.env.PUBLIC_URL}/images/1731806825200.jpg`, `${process.env.PUBLIC_URL}/images/1731807191481.jpg`, `${process.env.PUBLIC_URL}/images/1731807231234.jpg`];\nfunction ImageSlider() {\n  _s();\n  // 현재 이미지 인덱스 상태와 이미지 로드 상태 정의\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\n  const [imagesLoaded, setImagesLoaded] = useState(false);\n\n  // 컴포넌트가 마운트될 때 이미지 슬라이드 자동 전환 설정\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setCurrentImageIndex(prevIndex => prevIndex === images.length - 1 ? 0 : prevIndex + 1 // 마지막 이미지에서 첫 이미지로 돌아감\n      );\n    }, 5000); // 5초마다 이미지 변경\n\n    return () => clearInterval(timer); // 컴포넌트 언마운트 시 타이머 정리\n  }, []);\n\n  // 이미지 로드 완료 시 호출되는 함수\n  const handleImageLoad = () => {\n    setImagesLoaded(true); // 모든 이미지가 로드되었음을 상태로 설정\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"image-slider-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-slider\",\n      children: images.map((image, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n        // 고유 키 설정\n        src: image // 이미지 소스 설정\n        ,\n        alt: `슬라이드 ${index + 1}` // 접근성을 위한 대체 텍스트\n        ,\n        className: `slider-image ${index === currentImageIndex ? 'active' : ''}` // 현재 활성화된 이미지에 클래스 추가\n        ,\n        onLoad: handleImageLoad // 이미지 로드 시 핸들러 호출\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), !imagesLoaded && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(ImageSlider, \"UuCY23WiC3HQI0K+aYbkFDmUeVo=\");\n_c = ImageSlider;\nexport default ImageSlider; // ImageSlider 컴포넌트를 기본 내보내기\nvar _c;\n$RefreshReg$(_c, \"ImageSlider\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","images","process","env","PUBLIC_URL","ImageSlider","_s","currentImageIndex","setCurrentImageIndex","imagesLoaded","setImagesLoaded","timer","setInterval","prevIndex","length","clearInterval","handleImageLoad","className","children","map","image","index","src","alt","onLoad","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/work/reservation/front/src/pages/Main/ImageSlider.js"],"sourcesContent":["// ImageSlider.js\nimport React, { useState, useEffect } from 'react'; // React 및 필요한 훅 임포트\n\n// 이미지 배열 정의\nconst images = [\n  `${process.env.PUBLIC_URL}/images/1731806820349.jpg`,\n  `${process.env.PUBLIC_URL}/images/1731806825200.jpg`,\n  `${process.env.PUBLIC_URL}/images/1731807191481.jpg`,\n  `${process.env.PUBLIC_URL}/images/1731807231234.jpg`\n];\n\nfunction ImageSlider() {\n  // 현재 이미지 인덱스 상태와 이미지 로드 상태 정의\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\n  const [imagesLoaded, setImagesLoaded] = useState(false);\n\n  // 컴포넌트가 마운트될 때 이미지 슬라이드 자동 전환 설정\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setCurrentImageIndex((prevIndex) => \n        prevIndex === images.length - 1 ? 0 : prevIndex + 1 // 마지막 이미지에서 첫 이미지로 돌아감\n      );\n    }, 5000); // 5초마다 이미지 변경\n\n    return () => clearInterval(timer); // 컴포넌트 언마운트 시 타이머 정리\n  }, []);\n\n  // 이미지 로드 완료 시 호출되는 함수\n  const handleImageLoad = () => {\n    setImagesLoaded(true); // 모든 이미지가 로드되었음을 상태로 설정\n  };\n\n  return (\n    <div className=\"image-slider-wrapper\">\n      <div className=\"image-slider\">\n        {/* 이미지 배열을 맵핑하여 각각의 이미지를 렌더링 */}\n        {images.map((image, index) => (\n          <img\n            key={index} // 고유 키 설정\n            src={image} // 이미지 소스 설정\n            alt={`슬라이드 ${index + 1}`} // 접근성을 위한 대체 텍스트\n            className={`slider-image ${index === currentImageIndex ? 'active' : ''}`} // 현재 활성화된 이미지에 클래스 추가\n            onLoad={handleImageLoad} // 이미지 로드 시 핸들러 호출\n          />\n        ))}\n      </div>\n      {/* 이미지가 로드되지 않았을 경우 로딩 메시지 표시 */}\n      {!imagesLoaded && <div className=\"loading\">Loading...</div>}\n    </div>\n  );\n}\n\nexport default ImageSlider; // ImageSlider 컴포넌트를 기본 내보내기"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO,CAAC,CAAC;;AAEpD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,MAAM,GAAG,CACb,GAAGC,OAAO,CAACC,GAAG,CAACC,UAAU,2BAA2B,EACpD,GAAGF,OAAO,CAACC,GAAG,CAACC,UAAU,2BAA2B,EACpD,GAAGF,OAAO,CAACC,GAAG,CAACC,UAAU,2BAA2B,EACpD,GAAGF,OAAO,CAACC,GAAG,CAACC,UAAU,2BAA2B,CACrD;AAED,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB;EACA,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EAC7D,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;;EAEvD;EACAC,SAAS,CAAC,MAAM;IACd,MAAMa,KAAK,GAAGC,WAAW,CAAC,MAAM;MAC9BJ,oBAAoB,CAAEK,SAAS,IAC7BA,SAAS,KAAKZ,MAAM,CAACa,MAAM,GAAG,CAAC,GAAG,CAAC,GAAGD,SAAS,GAAG,CAAC,CAAC;MACtD,CAAC;IACH,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;;IAEV,OAAO,MAAME,aAAa,CAACJ,KAAK,CAAC,CAAC,CAAC;EACrC,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMK,eAAe,GAAGA,CAAA,KAAM;IAC5BN,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC;EACzB,CAAC;EAED,oBACEV,OAAA;IAAKiB,SAAS,EAAC,sBAAsB;IAAAC,QAAA,gBACnClB,OAAA;MAAKiB,SAAS,EAAC,cAAc;MAAAC,QAAA,EAE1BjB,MAAM,CAACkB,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACvBrB,OAAA;QACc;QACZsB,GAAG,EAAEF,KAAM,CAAC;QAAA;QACZG,GAAG,EAAE,QAAQF,KAAK,GAAG,CAAC,EAAG,CAAC;QAAA;QAC1BJ,SAAS,EAAE,gBAAgBI,KAAK,KAAKd,iBAAiB,GAAG,QAAQ,GAAG,EAAE,EAAG,CAAC;QAAA;QAC1EiB,MAAM,EAAER,eAAgB,CAAC;MAAA,GAJpBK,KAAK;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKX,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,EAEL,CAACnB,YAAY,iBAAIT,OAAA;MAAKiB,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAC;IAAU;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxD,CAAC;AAEV;AAACtB,EAAA,CAvCQD,WAAW;AAAAwB,EAAA,GAAXxB,WAAW;AAyCpB,eAAeA,WAAW,CAAC,CAAC;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}