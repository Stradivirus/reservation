{"ast":null,"code":"// IP/포트 없이 상대경로만 사용 (Nginx가 라우팅)\nconst REGISTRATION_API_URL = '/api';\nconst COUPON_API_URL = '/coupon';\n\n// 이메일 중복 확인\nexport async function checkEmailDuplicate(email) {\n  const response = await fetch(`${REGISTRATION_API_URL}/check-email`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email\n    })\n  });\n  return response;\n}\n\n// 전화번호 중복 확인\nexport async function checkPhoneDuplicate(phone) {\n  const response = await fetch(`${REGISTRATION_API_URL}/check-phone`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      phone\n    })\n  });\n  return response;\n}\n\n// 사전등록\nexport async function preregister({\n  email,\n  phone,\n  privacyConsent\n}) {\n  const response = await fetch(`${REGISTRATION_API_URL}/preregister`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      phone,\n      privacyConsent\n    }) // camelCase로!\n  });\n  return response;\n}\n\n// 쿠폰 사용\nexport async function postCoupon(couponCode) {\n  const response = await fetch(`${COUPON_API_URL}/use`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      couponCode\n    }) // 이렇게 되면 400 에러\n  });\n  return response;\n}","map":{"version":3,"names":["REGISTRATION_API_URL","COUPON_API_URL","checkEmailDuplicate","email","response","fetch","method","headers","body","JSON","stringify","checkPhoneDuplicate","phone","preregister","privacyConsent","postCoupon","couponCode"],"sources":["/home/work/reservation/front/src/api.js"],"sourcesContent":["// IP/포트 없이 상대경로만 사용 (Nginx가 라우팅)\nconst REGISTRATION_API_URL = '/api';\nconst COUPON_API_URL = '/coupon';\n\n// 이메일 중복 확인\nexport async function checkEmailDuplicate(email) {\n  const response = await fetch(`${REGISTRATION_API_URL}/check-email`, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ email }),\n  });\n  return response;\n}\n\n// 전화번호 중복 확인\nexport async function checkPhoneDuplicate(phone) {\n  const response = await fetch(`${REGISTRATION_API_URL}/check-phone`, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ phone }),\n  });\n  return response;\n}\n\n// 사전등록\nexport async function preregister({ email, phone, privacyConsent }) {\n  const response = await fetch(`${REGISTRATION_API_URL}/preregister`, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ email, phone, privacyConsent }), // camelCase로!\n  });\n  return response;\n}\n\n// 쿠폰 사용\nexport async function postCoupon(couponCode) {\n  const response = await fetch(`${COUPON_API_URL}/use`, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ couponCode }), // 이렇게 되면 400 에러\n  });\n  return response;\n}"],"mappings":"AAAA;AACA,MAAMA,oBAAoB,GAAG,MAAM;AACnC,MAAMC,cAAc,GAAG,SAAS;;AAEhC;AACA,OAAO,eAAeC,mBAAmBA,CAACC,KAAK,EAAE;EAC/C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,oBAAoB,cAAc,EAAE;IAClEM,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEP;IAAM,CAAC;EAChC,CAAC,CAAC;EACF,OAAOC,QAAQ;AACjB;;AAEA;AACA,OAAO,eAAeO,mBAAmBA,CAACC,KAAK,EAAE;EAC/C,MAAMR,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,oBAAoB,cAAc,EAAE;IAClEM,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEE;IAAM,CAAC;EAChC,CAAC,CAAC;EACF,OAAOR,QAAQ;AACjB;;AAEA;AACA,OAAO,eAAeS,WAAWA,CAAC;EAAEV,KAAK;EAAES,KAAK;EAAEE;AAAe,CAAC,EAAE;EAClE,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,oBAAoB,cAAc,EAAE;IAClEM,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEP,KAAK;MAAES,KAAK;MAAEE;IAAe,CAAC,CAAC,CAAE;EAC1D,CAAC,CAAC;EACF,OAAOV,QAAQ;AACjB;;AAEA;AACA,OAAO,eAAeW,UAAUA,CAACC,UAAU,EAAE;EAC3C,MAAMZ,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,cAAc,MAAM,EAAE;IACpDK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEM;IAAW,CAAC,CAAC,CAAE;EACxC,CAAC,CAAC;EACF,OAAOZ,QAAQ;AACjB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}