{"ast":null,"code":"import React,{useState}from'react';import{useLocation,useNavigate}from'react-router-dom';import'./UseCouponPage.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function UseCouponPage(){const location=useLocation();const navigate=useNavigate();const[message,setMessage]=useState('');const[isLoading,setIsLoading]=useState(false);// 새로 추가된 상태\nconst[inputCouponCode,setInputCouponCode]=useState('');const couponCode=new URLSearchParams(location.search).get('code');const handleUseCoupon=async()=>{// 수정된 부분: URL의 쿠폰 코드 또는 입력된 쿠폰 코드 사용\nconst codeToUse=couponCode||inputCouponCode;if(!codeToUse){setMessage('쿠폰 코드를 입력해주세요.');return;}setIsLoading(true);try{const response=await fetch('http://localhost:8000/api/use-coupon',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({coupon_code:codeToUse})});const data=await response.json();if(response.ok){setMessage(data.message);}else{setMessage(data.detail||'쿠폰 사용 중 오류가 발생했습니다.');}}catch(error){setMessage('서버 연결 중 오류가 발생했습니다.');}finally{setIsLoading(false);}};return/*#__PURE__*/_jsx(\"div\",{className:\"use-coupon-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"use-coupon-card\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"use-coupon-title\",children:\"\\uCFE0\\uD3F0 \\uC0AC\\uC6A9\\uD558\\uAE30\"}),couponCode?/*#__PURE__*/_jsxs(\"div\",{className:\"coupon-code-container\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"coupon-code-label\",children:\"\\uCFE0\\uD3F0 \\uCF54\\uB4DC:\"}),/*#__PURE__*/_jsx(\"p\",{className:\"coupon-code\",children:couponCode})]}):/*#__PURE__*/// 새로 추가된 부분: 쿠폰 코드 입력 필드\n_jsx(\"div\",{className:\"coupon-input-container\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:inputCouponCode,onChange:e=>setInputCouponCode(e.target.value),placeholder:\"\\uCFE0\\uD3F0 \\uCF54\\uB4DC\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\",className:\"coupon-input\"})}),/*#__PURE__*/_jsx(\"button\",{className:`use-coupon-button ${isLoading?'loading':''}`,onClick:handleUseCoupon,disabled:isLoading,children:isLoading?'처리 중...':'쿠폰 사용하기'}),message&&/*#__PURE__*/_jsx(\"p\",{className:`message ${message.includes('성공')?'success':'error'}`,children:message}),/*#__PURE__*/_jsx(\"button\",{className:\"back-button\",onClick:()=>navigate('/'),children:\"\\uBA54\\uC778 \\uD398\\uC774\\uC9C0\\uB85C \\uB3CC\\uC544\\uAC00\\uAE30\"})]})});}export default UseCouponPage;","map":{"version":3,"names":["React","useState","useLocation","useNavigate","jsx","_jsx","jsxs","_jsxs","UseCouponPage","location","navigate","message","setMessage","isLoading","setIsLoading","inputCouponCode","setInputCouponCode","couponCode","URLSearchParams","search","get","handleUseCoupon","codeToUse","response","fetch","method","headers","body","JSON","stringify","coupon_code","data","json","ok","detail","error","className","children","type","value","onChange","e","target","placeholder","onClick","disabled","includes"],"sources":["/home/work/reservation/front/src/UseCouponPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport './UseCouponPage.css';\n\nfunction UseCouponPage() {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [message, setMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  // 새로 추가된 상태\n  const [inputCouponCode, setInputCouponCode] = useState('');\n  const couponCode = new URLSearchParams(location.search).get('code');\n\n  const handleUseCoupon = async () => {\n    // 수정된 부분: URL의 쿠폰 코드 또는 입력된 쿠폰 코드 사용\n    const codeToUse = couponCode || inputCouponCode;\n    if (!codeToUse) {\n      setMessage('쿠폰 코드를 입력해주세요.');\n      return;\n    }\n\n    setIsLoading(true);\n    try {\n      const response = await fetch('http://localhost:8000/api/use-coupon', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ coupon_code: codeToUse }),\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        setMessage(data.message);\n      } else {\n        setMessage(data.detail || '쿠폰 사용 중 오류가 발생했습니다.');\n      }\n    } catch (error) {\n      setMessage('서버 연결 중 오류가 발생했습니다.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"use-coupon-container\">\n      <div className=\"use-coupon-card\">\n        <h2 className=\"use-coupon-title\">쿠폰 사용하기</h2>\n        {couponCode ? (\n          <div className=\"coupon-code-container\">\n            <p className=\"coupon-code-label\">쿠폰 코드:</p>\n            <p className=\"coupon-code\">{couponCode}</p>\n          </div>\n        ) : (\n          // 새로 추가된 부분: 쿠폰 코드 입력 필드\n          <div className=\"coupon-input-container\">\n            <input\n              type=\"text\"\n              value={inputCouponCode}\n              onChange={(e) => setInputCouponCode(e.target.value)}\n              placeholder=\"쿠폰 코드를 입력하세요\"\n              className=\"coupon-input\"\n            />\n          </div>\n        )}\n        <button \n          className={`use-coupon-button ${isLoading ? 'loading' : ''}`} \n          onClick={handleUseCoupon} \n          disabled={isLoading}\n        >\n          {isLoading ? '처리 중...' : '쿠폰 사용하기'}\n        </button>\n        {message && <p className={`message ${message.includes('성공') ? 'success' : 'error'}`}>{message}</p>}\n        <button className=\"back-button\" onClick={() => navigate('/')}>\n          메인 페이지로 돌아가기\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default UseCouponPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}